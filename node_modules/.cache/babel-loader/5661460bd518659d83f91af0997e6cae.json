{"ast":null,"code":"var _jsxFileName = \"/home/asus/Desktop/Contact_list_project/contact-list/src/Pages/ContactList/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 150\n}, {\n  id: 'email',\n  label: 'Email',\n  minWidth: 150\n}, {\n  id: 'phoneNumber',\n  label: 'Phone Number',\n  minWidth: 150,\n  align: 'right'\n}, {\n  id: 'title',\n  label: 'Company/Title',\n  minWidth: 150,\n  align: 'right'\n}, {\n  id: 'label',\n  label: 'Labels',\n  minWidth: 150,\n  align: 'right'\n}, {\n  id: 'blank',\n  label: '',\n  minWidth: 150,\n  align: 'right'\n}];\n\nfunction createData(name, email, phoneNumber, title, label) {\n  return {\n    name,\n    email,\n    phoneNumber,\n    title,\n    label\n  };\n}\n\nconst rows = [createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'), createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'), createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any')];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '89vh'\n  },\n  container: {\n    maxHeight: 800\n  },\n  button: {\n    margin: '10px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 'auto'\n  }\n});\n\nconst ContactList = ({\n  contacts\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(15);\n  const [showComments, setShowComments] = useState(false);\n  useEffect(() => {}, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleComment = event => {\n    console.log('comment event', event);\n    setShowComments(true);\n  };\n\n  const handleClose = () => {\n    setShowComments(false);\n  };\n  /* const applyFilters = () => (\n    console.log('applying filters')\n  ); */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"small\",\n                className: classes.button,\n                onClick: () => {\n                  handleComment();\n                },\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, row.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 15, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showComments && /*#__PURE__*/_jsxDEV(Modal, {\n        \"aria-labelledby\": \"transition-modal-title\",\n        \"aria-describedby\": \"transition-modal-description\",\n        className: classes.modal,\n        open: showComments,\n        onClose: handleClose,\n        closeAfterTransition: true,\n        BackdropComponent: Backdrop,\n        BackdropProps: {\n          timeout: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: showComments,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"transition-modal-title\",\n              children: \"showing list of comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"small\",\n              className: classes.button,\n              onClick: () => {\n                handleComment();\n              },\n              children: \"Add Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactList, \"cROb3qDr32AHpMmPv8GZu4YYbd8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContactList;\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts\n});\n\nexport default connect(mapStateToProps)(ContactList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/home/asus/Desktop/Contact_list_project/contact-list/src/Pages/ContactList/index.jsx"],"names":["React","useState","useEffect","connect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Modal","Backdrop","Fade","columns","id","label","minWidth","align","createData","name","email","phoneNumber","title","rows","useStyles","root","width","height","container","maxHeight","button","margin","modal","display","alignItems","justifyContent","padding","ContactList","contacts","classes","page","setPage","rowsPerPage","setRowsPerPage","showComments","setShowComments","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleComment","console","log","handleClose","map","column","slice","row","format","code","length","timeout","paper","mapStateToProps","state"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 150 },\n  { id: 'email', label: 'Email', minWidth: 150 },\n  {\n    id: 'phoneNumber',\n    label: 'Phone Number',\n    minWidth: 150,\n    align: 'right',\n  },\n  {\n    id: 'title',\n    label: 'Company/Title',\n    minWidth: 150,\n    align: 'right',\n  },\n  {\n    id: 'label',\n    label: 'Labels',\n    minWidth: 150,\n    align: 'right',\n  },\n  {\n    id: 'blank',\n    label: '',\n    minWidth: 150,\n    align: 'right',\n  },\n];\n\nfunction createData(name, email, phoneNumber, title, label) {\n  return {\n    name, email, phoneNumber, title, label,\n  };\n}\n\nconst rows = [\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('avni tanwar', 'avnitanwar@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('vansh', 'vansh@gmail.com', '1324171354', 'SE', 'Any'),\n  createData('nitya tanwar', 'nityatanwar@gmail.com', '1324171354', 'SE', 'Any'),\n\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '89vh',\n\n  },\n  container: {\n    maxHeight: 800,\n  },\n  button: {\n    margin: '10px',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 'auto',\n  },\n});\n\nconst ContactList = ({ contacts }) => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(15);\n  const [showComments, setShowComments] = useState(false);\n\n  useEffect(() => {\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleComment = (event) => {\n    console.log('comment event', event);\n    setShowComments(true);\n  };\n\n  const handleClose = () => {\n    setShowComments(false);\n  };\n\n  /* const applyFilters = () => (\n    console.log('applying filters')\n  ); */\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={() => { handleComment(); }}\n                  >\n                    Comment\n                  </Button>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <div>\n        {showComments && (\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={showComments}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={showComments}>\n              <div className={classes.paper}>\n                <h2 id=\"transition-modal-title\">showing list of comments</h2>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  className={classes.button}\n                  onClick={() => { handleComment(); }}\n                >\n                  Add Comment\n                </Button>\n              </div>\n            </Fade>\n          </Modal>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({ contacts: state.contacts });\n\nexport default connect(mapStateToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}