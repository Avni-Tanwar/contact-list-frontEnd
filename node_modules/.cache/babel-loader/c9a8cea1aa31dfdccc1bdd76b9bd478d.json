{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable no-unused-vars */\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { GET_CONTACTS } from '../Constants/Contacts';\nimport { setContacts } from '../Actions/Contacts';\nimport { getContactsApi } from '../../Api';\nexport function* getContactsList() {\n  try {\n    console.log('inside contacts sagas');\n    const response = yield call(getContactsApi);\n    yield put(setContacts(response));\n  } catch (error) {\n    console.log('error');\n    yield toast.error('Data Fetch Error');\n  }\n}\nexport function* watchContactsApi() {\n  yield takeLatest(GET_CONTACTS, getContactsList);\n}","map":{"version":3,"sources":["/home/asus/Desktop/Contact_list_project/front-end/src/Redux/Sagas/Contacts.js"],"names":["call","put","takeLatest","toast","GET_CONTACTS","setContacts","getContactsApi","getContactsList","console","log","response","error","watchContactsApi"],"mappings":"AAAA;;AACA;AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SACEC,YADF,QAEO,uBAFP;AAGA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAO,UAAUC,eAAV,GAA4B;AACjC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACM,cAAD,CAA3B;AACA,UAAML,GAAG,CAACI,WAAW,CAACK,QAAD,CAAZ,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMN,KAAK,CAACQ,KAAN,CAAY,kBAAZ,CAAN;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMV,UAAU,CAACE,YAAD,EAAeG,eAAf,CAAhB;AACD","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport {\n  GET_CONTACTS,\n} from '../Constants/Contacts';\nimport { setContacts } from '../Actions/Contacts';\nimport { getContactsApi } from '../../Api';\n\nexport function* getContactsList() {\n  try {\n    console.log('inside contacts sagas');\n    const response = yield call(getContactsApi);\n    yield put(setContacts(response));\n  } catch (error) {\n    console.log('error');\n    yield toast.error('Data Fetch Error');\n  }\n}\n\nexport function* watchContactsApi() {\n  yield takeLatest(GET_CONTACTS, getContactsList);\n}\n"]},"metadata":{},"sourceType":"module"}